(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{455:function(s,e,n){s.exports=n.p+"assets/img/e3837bd09a0ebd89e7fec4544b4f508d.2317bd49.png"},456:function(s,e,n){s.exports=n.p+"assets/img/3271360c7b775237bd95bdfa3f0905cf.899b4c29.png"},584:function(s,e,n){"use strict";n.r(e);var a=n(14),t=Object(a.a)({},(function(){var s=this,e=s._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("引言")]),s._v(" "),e("p",[s._v("在文章的开头，先说下NPE问题，NPE问题就是，我们在开发中经常碰到的NullPointerException.假设我们有两个类，他们的UML类图如下图所示")]),s._v(" "),e("p",[e("a",{attrs:{href:"http://www.ibloger.net/zb_users/upload/2018/06/201806161529155706180997.png",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:n(455),alt:"o_optional1.png"}}),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("在这种情况下，有如下代码")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("user.getAddress().getProvince();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这种写法，在user为null时，是有可能报NullPointerException异常的。为了解决这个问题，于是采用下面的写法")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("if(user!=null){\n    Address address = user.getAddress();\n    if(address!=null){\n        String province = address.getProvince();\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("这种写法是比较丑陋的，为了避免上述丑陋的写法，让丑陋的设计变得优雅。JAVA8提供了Optional类来优化这种写法，接下来的正文部分进行详细说明")]),s._v(" "),e("h4",{attrs:{id:"api介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api介绍"}},[s._v("#")]),s._v(" API介绍")]),s._v(" "),e("p",[s._v("先介绍一下API，与其他文章不同的是，本文采取类比的方式来讲，同时结合源码。而不像其他文章一样，一个个API罗列出来，让人找不到重点。")]),s._v(" "),e("p",[s._v("1、Optional(T value),empty(),of(T value),ofNullable(T value)")]),s._v(" "),e("p",[s._v("这四个函数之间具有相关性，因此放在一组进行记忆。")]),s._v(" "),e("p",[s._v("先说明一下，"),e("code",[s._v("Optional(T value)")]),s._v("，即构造函数，它是private权限的，不能由外部调用的。其余三个函数是public权限，供我们所调用。那么，Optional的本质，就是内部储存了一个真实的值，在构造的时候，就直接判断其值是否为空。好吧，这么说还是比较抽象。直接上"),e("code",[s._v("Optional(T value)")]),s._v("构造函数的源码，如下图所示")]),s._v(" "),e("p",[e("a",{attrs:{href:"http://www.ibloger.net/zb_users/upload/2018/06/201806161529155719187498.png",target:"_blank",rel:"noopener noreferrer"}},[e("img",{attrs:{src:n(456),alt:"o_optional2png.png"}}),e("OutboundLink")],1)]),s._v(" "),e("p",[s._v("那么，**of(T value)**的源码如下")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("public static <T> Optional<T> of(T value) {\n    return new Optional<>(value);\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("也就是说of(T value)函数内部调用了构造函数。根据构造函数的源码我们可以得出两个结论:")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("通过"),e("code",[s._v("of(T value)")]),s._v("函数所构造出的Optional对象，当Value值为空时，依然会报NullPointerException。")])]),s._v(" "),e("li",[e("p",[s._v("通过"),e("code",[s._v("of(T value)")]),s._v("函数所构造出的Optional对象，当Value值不为空时，能正常构造Optional对象。")])])]),s._v(" "),e("p",[s._v("除此之外呢，Optional类内部还维护一个value为null的对象，大概就是长下面这样的")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('public final class Optional<T> {\n    //省略....\n    private static final Optional<?> EMPTY = new Optional<>();\n    private Optional() {\n        this.value = null;\n    }\n    //省略...\n    public static<T> Optional<T> empty() {\n        @SuppressWarnings("unchecked")\n        Optional<T> t = (Optional<T>) EMPTY;\n        return t;\n    }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[s._v("那么，"),e("code",[s._v("empty（）")]),s._v("的作用就是返回EMPTY对象。")]),s._v(" "),e("p",[s._v("好了铺垫了这么多，可以说"),e("code",[s._v("ofNullable(T value)")]),s._v("的作用了，上源码")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" public static <T> Optional<T> ofNullable(T value) {\n    return value == null ? empty() : of(value);\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("好吧，大家应该都看得懂什么意思了。相比较"),e("code",[s._v("of(T value)")]),s._v("的区别就是，当value值为null时，of(T value)会报NullPointerException异常；"),e("code",[s._v("ofNullable(T value)")]),s._v("不会throw Exception，"),e("code",[s._v("ofNullable(T value)")]),s._v("直接返回一个"),e("code",[s._v("EMPTY")]),s._v("对象。")]),s._v(" "),e("p",[s._v("那是不是意味着，我们在项目中只用"),e("code",[s._v("ofNullable")]),s._v("函数而不用of函数呢?")]),s._v(" "),e("p",[s._v("不是的，一个东西存在那么自然有存在的价值。当我们在运行过程中，不想隐藏"),e("code",[s._v("NullPointerException")]),s._v("。而是要立即报告，这种情况下就用Of函数。但是不得不承认，这样的场景真的很少。博主也仅在写junit测试用例中用到过此函数。")]),s._v(" "),e("p",[s._v("2、orElse(T other)，orElseGet(Supplier<? extends T> other)和orElseThrow(Supplier<? extends X> exceptionSupplier)")]),s._v(" "),e("p",[s._v("这三个函数放一组进行记忆，都是在构造函数传入的value值为null时，进行调用的。"),e("code",[s._v("orElse")]),s._v("和"),e("code",[s._v("orElseGet")]),s._v("的用法如下所示，相当于value值为null时，给予一个默认值:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('@Test\npublic void test() {\n    User user = null;\n    user = Optional.ofNullable(user).orElse(createUser());\n    user = Optional.ofNullable(user).orElseGet(() -> createUser());\n    \n}\npublic User createUser(){\n    User user = new User();\n    user.setName("zhangsan");\n    return user;\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("这两个函数的区别：当user值不为null时，"),e("code",[s._v("orElse")]),s._v("函数依然会执行createUser()方法，而"),e("code",[s._v("orElseGet")]),s._v("函数并不会执行createUser()方法，大家可自行测试。")]),s._v(" "),e("p",[s._v("至于orElseThrow，就是value值为null时,直接抛一个异常出去，用法如下所示")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('User user = null;\nOptional.ofNullable(user).orElseThrow(()->new Exception("用户不存在"));\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("3、map(Function<? super T, ? extends U> mapper)和flatMap(Function<? super T, Optional"),e("U",[s._v("> mapper)")])],1),s._v(" "),e("p",[s._v("这两个函数放在一组记忆，这两个函数做的是转换值的操作。")]),s._v(" "),e("p",[s._v("直接上源码")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" public final class Optional<T> {\n    //省略....\n     public<U> Optional<U> map(Function<? super T, ? extends U> mapper) {\n        Objects.requireNonNull(mapper);\n        if (!isPresent())\n            return empty();\n        else {\n            return Optional.ofNullable(mapper.apply(value));\n        }\n    }\n    //省略...\n     public<U> Optional<U> flatMap(Function<? super T, Optional<U>> mapper) {\n        Objects.requireNonNull(mapper);\n        if (!isPresent())\n            return empty();\n        else {\n            return Objects.requireNonNull(mapper.apply(value));\n        }\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("这两个函数，在函数体上没什么区别。唯一区别的就是入参，map函数所接受的入参类型为"),e("code",[s._v("Function<? super T, ? extends U>")]),s._v("，而flapMap的入参类型为"),e("code",[s._v("Function<? super T, Optional<U>>")]),s._v("。")]),s._v(" "),e("p",[s._v("在具体用法上，对于map而言：")]),s._v(" "),e("p",[s._v("如果User结构是下面这样的")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("public class User {\n    private String name;\n    public String getName() {\n        return name;\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("这时候取name的写法如下所示")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("String city = Optional.ofNullable(user).map(u-> u.getName()).get();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("对于flatMap而言:")]),s._v(" "),e("p",[s._v("如果User结构是下面这样的")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("public class User {\n    private String name;\n    public Optional<String> getName() {\n        return Optional.ofNullable(name);\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("这时候取name的写法如下所示")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("String city = Optional.ofNullable(user).flatMap(u-> u.getName()).get();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("4、isPresent()和ifPresent(Consumer<? super T> consumer)")]),s._v(" "),e("p",[s._v("这两个函数放在一起记忆，"),e("code",[s._v("isPresent")]),s._v("即判断value值是否为空，而"),e("code",[s._v("ifPresent")]),s._v("就是在value值不为空时，做一些操作。这两个函数的源码如下")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("public final class Optional<T> {\n    //省略....\n    public boolean isPresent() {\n        return value != null;\n    }\n    //省略...\n    public void ifPresent(Consumer<? super T> consumer) {\n        if (value != null)\n            consumer.accept(value);\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("需要额外说明的是，大家千万不要把")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("if (user != null){\n   // TODO: do something\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("给写成")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("User user = Optional.ofNullable(user);\nif (Optional.isPresent()){\n   // TODO: do something\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("因为这样写，代码结构依然丑陋。博主会在后面给出正确写法")]),s._v(" "),e("p",[s._v("至于"),e("code",[s._v("ifPresent(Consumer<? super T> consumer)")]),s._v("，用法也很简单，如下所示")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Optional.ofNullable(user).ifPresent(u->{\n    // TODO: do something\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("5、filter(Predicate<? super T> predicate)")]),s._v(" "),e("p",[s._v("不多说，直接上源码")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("public final class Optional<T> {\n    //省略....\n   Objects.requireNonNull(predicate);\n        if (!isPresent())\n            return this;\n        else\n            return predicate.test(value) ? this : empty();\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("filter 方法接受一个 "),e("code",[s._v("Predicate")]),s._v(" 来对 "),e("code",[s._v("Optional")]),s._v(" 中包含的值进行过滤，如果包含的值满足条件，那么还是返回这个 Optional；否则返回 "),e("code",[s._v("Optional.empty")]),s._v("。")]),s._v(" "),e("p",[s._v("用法如下")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("Optional<User> user1 = Optional.ofNullable(user).filter(u -> u.getName().length()<6);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("如上所示，如果user的name的长度是小于6的，则返回。如果是大于6的，则返回一个EMPTY对象。")]),s._v(" "),e("h4",{attrs:{id:"实战使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实战使用"}},[s._v("#")]),s._v(" 实战使用")]),s._v(" "),e("p",[s._v("例一")]),s._v(" "),e("p",[s._v("在函数方法中")]),s._v(" "),e("p",[s._v("以前写法")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('public String getCity(User user)  throws Exception{\n        if(user!=null){\n            if(user.getAddress()!=null){\n                Address address = user.getAddress();\n                if(address.getCity()!=null){\n                    return address.getCity();\n                }\n            }\n        }\n        throw new Excpetion("取值错误"); \n    }\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("JAVA8写法")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('public String getCity(User user) throws Exception{\n    return Optional.ofNullable(user)\n                   .map(u-> u.getAddress())\n                   .map(a->a.getCity())\n                   .orElseThrow(()->new Exception("取指错误"));\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("例二")]),s._v(" "),e("p",[s._v("比如，在主程序中")]),s._v(" "),e("p",[s._v("以前写法")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("if(user!=null){\n    dosomething(user);\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("JAVA8写法")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" Optional.ofNullable(user)\n    .ifPresent(u->{\n        dosomething(u);\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("例三")]),s._v(" "),e("p",[s._v("以前写法")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('public User getUser(User user) throws Exception{\n    if(user!=null){\n        String name = user.getName();\n        if("zhangsan".equals(name)){\n            return user;\n        }\n    }else{\n        user = new User();\n        user.setName("zhangsan");\n        return user;\n    }\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("java8写法")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('public User getUser(User user) {\n    return Optional.ofNullable(user)\n                   .filter(u->"zhangsan".equals(u.getName()))\n                   .orElseGet(()-> {\n                        User user1 = new User();\n                        user1.setName("zhangsan");\n                        return user1;\n                   });\n}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("其他的例子，不一一列举了。不过采用这种链式编程，虽然代码优雅了。但是，逻辑性没那么明显，可读性有所降低，大家项目中看情况酌情使用。")]),s._v(" "),e("p",[s._v("本文转自 "),e("a",{attrs:{href:"https://blog.csdn.net/zjhred/article/details/84976734",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://blog.csdn.net/zjhred/article/details/84976734"),e("OutboundLink")],1),s._v("。")])])}),[],!1,null,null,null);e.default=t.exports}}]);