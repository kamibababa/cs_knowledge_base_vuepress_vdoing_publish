(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{558:function(s,n,a){"use strict";a.r(n);var e=a(14),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),n("p",[s._v("之前看到一个有趣的说法：从员工的工位状态可以判断其工作状态——工位越整洁、个人物品越少，员工随时准备“跑路”的概率越高。这个观点让我觉得颇有道理。")]),s._v(" "),n("p",[s._v("那么同样的，从公司对待员工的态度和政策中，也可以看出一些东西，在公司上升期时，管理层的重心通常放在业务拓展上，专注于赚钱、做大蛋糕，因此对员工相对宽容，只要完成本职工作，不会过于苛责。但当公司发展遇到瓶颈或进入衰退期时，就开始苛求细节、抓考勤、缩减福利，各种压缩成本，卷形式主义，员工压力倍增。")]),s._v(" "),n("p",[s._v("有时，员工在这些高压环境下，还要应对额外的任务，比如写日报、周报，想必这也是程序员最烦的一件事，明明工作产出已经在代码中体现了，却还要花大量时间去写 ppt，领导写写也就罢了，毕竟这是他们的工作之一，一线干活的程序员也要写，这就很烦人了，每天做不完的需求还要挤出来时间整理总结。")]),s._v(" "),n("p",[s._v("为了解决这个痛点，今天我给大家介绍同事写的自动化写周报的脚本工具，能够一键抓取 git 提交记录，并按照你需要的格式生成日报、周报。")]),s._v(" "),n("h3",{attrs:{id:"功能介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#功能介绍"}},[s._v("#")]),s._v(" 功能介绍")]),s._v(" "),n("p",[s._v("效果如视频所示，只要把脚本运行文件当到项目所在文件夹下，用 node 环境执行，即可抓取该文件夹下的所有 git 仓库，并读取 "),n("code",[s._v(".git")]),s._v(" 配置文件的内容，根据 "),n("code",[s._v("commit")]),s._v(" 记录来生成简易工作报告，列出规定时间内做过的所有需求记录和耗时情况。")]),s._v(" "),n("p",[s._v("同时如果你在 commit 时，填写了 "),n("code",[s._v("jira")]),s._v(" 需求号，会根据 jira 需求号来抓取该需求详情，如对接人等信息，你可以根据自己公司的要求，稍微改下，填充更多需要的信息，使周报内容更丰富。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p3-xtjj-sign.byteimg.com/tos-cn-i-73owjymdk6/fe86139f953a40d7b83d279130f6d702~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgRXRoYW5fWmhvdQ==:q75.awebp?rk3s=f64ab15b&x-expires=1732839605&x-signature=CMXOWBjWuLaQjfGcviRsqlatd0E%3D",alt:"23361_1725610933.-迅捷PDF转换器.gif"}})]),s._v(" "),n("h3",{attrs:{id:"关键步骤解读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关键步骤解读"}},[s._v("#")]),s._v(" 关键步骤解读")]),s._v(" "),n("ol",[n("li",[n("p",[n("strong",[s._v("查找 Git 仓库")]),s._v("：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("findGitRepos")]),s._v(" 函数会递归地在指定目录下搜索包含 "),n("code",[s._v(".git")]),s._v(" 目录的文件夹，识别出所有的 Git 仓库路径。为了优化性能，避免无关文件夹（如 "),n("code",[s._v("node_modules")]),s._v("）的搜索，函数在遇到它们时会直接跳过。")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("获取 JIRA 需求")]),s._v("：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("getJIRA")]),s._v(" 函数利用 HTTP 请求调用 JIRA API，通过需求 ID 获取需求的详细信息，包括标题、优先级、描述和相关人员。它基于用户名和密码进行基础认证（Basic Auth），并返回解析后的需求详情。")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("获取 Git 日志")]),s._v("：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("getGitLogs")]),s._v(" 函数执行 Git 命令，提取最近 "),n("code",[s._v("TOTALDAYS")]),s._v(" 天内的提交记录。通过 "),n("code",[s._v("--author")]),s._v(" 参数筛选出指定用户的提交，并解析出包含需求 ID（如 "),n("code",[s._v("ABC-123")]),s._v(" 格式）的提交信息。")]),s._v(" "),n("li",[s._v("日志信息会被收集并保存到 "),n("code",[s._v("allLogs")]),s._v(" 数组中。")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("处理日志")]),s._v("：")]),s._v(" "),n("ul",[n("li",[n("code",[s._v("handleLog")]),s._v(" 函数将从 Git 日志中提取出的需求 ID 去重并统计提交次数，接着通过调用 "),n("code",[s._v("getJIRA")]),s._v(" 获取每个需求的详细信息。")]),s._v(" "),n("li",[s._v("需求信息获取成功后，它会根据提交次数和 "),n("code",[s._v("TOTALHOURS")]),s._v(" 分配每个需求的工时，并生成一份报告。\n"),n("ul",[n("li",[n("strong",[s._v("简易报告")]),s._v("：列出每个需求的 ID、标题、对接人和工时。")]),s._v(" "),n("li",[n("strong",[s._v("详细报告")]),s._v("：进一步包括需求的优先级、描述等信息。")])])])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("工时分配")]),s._v("：")]),s._v(" "),n("ul",[n("li",[s._v("根据每个需求的提交次数占比，脚本会将 "),n("code",[s._v("TOTALHOURS")]),s._v(" 进行合理分配，确保每个需求的工时按比例分配精确到 "),n("code",[s._v("MINUNIT")]),s._v("。")])])])]),s._v(" "),n("h3",{attrs:{id:"完整代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#完整代码"}},[s._v("#")]),s._v(" 完整代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const fs = require('fs')\nconst path = require('path')\nconst { exec } = require('child_process')\nconst http = require('http')\n\nlet allLogs = []\n\nconst GITAUTHOR = ''   //git显示的用户名，用于分离出自己的提交记录\nconst CNNAME = ''      //阁下大名，中文，需求参与人员可以把自己过滤掉\nconst USERNAME = ''  //jira 用户名，根据需求号用API去获取需求详情\nconst PASSWORD = '' //jira 密码，同上\nconst TOTALHOURS = 80  //总工时, 建议适当向上浮动\nconst TOTALDAYS = 14  //拉取git的最近n天的提交记录\nconst MINUNIT = 0.1   //工时精度\n\nconst findGitRepos = (dir, repos = []) => {\n  const files = fs.readdirSync(dir)\n\n  for (const file of files) {\n    const fullPath = path.join(dir, file);\n    const stat = fs.statSync(fullPath);\n\n    if (fullPath.includes('node_modules')) return\n\n    if (stat.isDirectory()) {\n      if (file === '.git') {\n        console.log('已扫到仓库：', dir)\n        repos.push(dir)\n        break\n      } else {\n        findGitRepos(fullPath, repos)\n      }\n    }\n  }\n  return repos\n}\n\nconst getJIRA = id => new Promise((resolve, reject) => {\n  const options = {\n    hostname: '10.xxx.80.xxx',\n    port: 8080,\n    path: '/rest/api/2/issue/' + id,\n    method: 'GET',\n    headers: {'Authorization': 'Basic ' + Buffer.from(USERNAME +':' + PASSWORD).toString('base64')}\n  }\n  \n  const req = http.request(options, res => {\n    let data = ''\n  \n    res.on('data', chunk => data += chunk)\n\n    res.on('end', () => {\n      const res = JSON.parse(data)\n      if (res.errorMessages) {\n        resolve(null)\n      } else {\n        let obj = {}\n        const fields = res.fields\n        \n        if (fields) {\n          if (fields.summary) {\n            obj.title = fields.summary\n          }\n          if (fields.customfield_10400) {\n            obj.linkUsers = fields.customfield_10400.map(item => item.displayName)\n          }\n          if (fields.reporter && obj.linkUsers) {\n            obj.linkUsers.unshift(fields.reporter.displayName)\n          }\n          if (fields.priority) {\n            obj.priority = fields.priority.name\n          }\n          if (fields.description) {\n            obj.description = fields.description\n          }\n        }\n        \n        resolve(obj)\n      }\n    })\n  })\n\n  req.on('error', error => console.error('Error:', error))\n  req.end()\n})\n\nconst getGitLogs = (repoPath, author, callback) => {\n  console.log('进入列队：', repoPath)\n  const gitCommand = `git log --since=\"${TOTALDAYS} days ago\" --author=\"${author}\" --pretty=format:\"%s\"`;\n  exec(gitCommand, { cwd: repoPath }, (error, stdout, stderr) => {\n    if (error) {\n      console.error(`获取日志时出错: ${error}`);\n      return;\n    }\n\n    if (stderr) {\n      console.error(`标准错误: ${stderr}`);\n      return;\n    }\n\n    if (stdout && stdout.trim()) {\n      const arr = stdout.trim().split('\\n')\n      console.log(`${repoPath} --- ${arr.length} 条日志`)\n      allLogs = allLogs.concat(arr)\n    } else {\n      console.log(`${repoPath} --- 没有日志`)\n    }\n\n    callback && callback()\n  });\n}\n\nconst handleLog = () => { \n  allLogs = allLogs.map(item => item.match(/[A-Z]+-\\d+/g)).filter(Boolean).flat()\n\n  const logsDict = {}\n\n  allLogs.forEach(item => {\n    if (!logsDict[item]) {\n      logsDict[item] = 1\n    } else {\n      logsDict[item] = logsDict[item] += 1\n    }\n  })\n\n  console.log('\\n\\n\\n\\n\\n需求提交次数：', logsDict, '\\n\\n\\n\\n\\n开始获需求内容')\n\n  let keys = Object.keys(logsDict)\n  let keysRes = []\n  let successKeys = []\n  let failKeys = []\n\n  Promise.all(keys.map(item => getJIRA(item))).then(values => {\n    keysRes = values\n\n    keys.forEach((key, index) => {\n      if (keysRes[index]) {\n        successKeys.push({\n          key: key,\n          title: keysRes[index].title,\n          linkUsers: keysRes[index].linkUsers,\n          priority: keysRes[index].priority,\n          description: keysRes[index].description\n        })\n      } else {\n        failKeys.push({key: key})\n      }\n    })\n\n    console.log('\\n\\n\\n\\n\\n成功需求：', successKeys.map(i => i.key))\n\n    if (failKeys.length) {\n      console.error('\\n\\n\\失败需求：', failKeys.map(i => i.key))\n    }\n\n    if (successKeys.length) {\n      console.error('\\n\\n\\n\\n\\n最终周报：\\n')\n      const submissions = {}\n      successKeys.forEach(item => submissions[item.key] = logsDict[item.key])\n      const totalHours = TOTALHOURS\n      const minUnit = MINUNIT\n      const totalSubmissions = Object.values(submissions).reduce((a, b) => a + b, 0)\n\n      const allocatedHours = {};\n      let remainingHours = totalHours\n\n      Object.keys(submissions).forEach(key => {\n        const proportion = submissions[key] / totalSubmissions\n        let hours = Math.round((proportion * totalHours) / minUnit) * minUnit\n        allocatedHours[key] = hours\n        remainingHours -= hours\n      })\n\n      const keys = Object.keys(allocatedHours)\n      let i = 0\n      while (remainingHours > 0 && i < keys.length) {\n        allocatedHours[keys[i]] += minUnit\n        remainingHours -= minUnit\n        i++\n      }\n\n      const sortReport = successKeys.map(i => {\n        return i.key + '  ' + i.title + '   对接人：' + ((i.linkUsers || []).filter(u => !u.includes(CNNAME)).join(', ') || '---') + '      工时：' +  (+(allocatedHours[i.key] || 0).toFixed(1)) + 'h'\n      })\n\n      console.log('\\n\\n简单报告：\\n')\n      console.log(sortReport)\n\n      const report = successKeys.map(i => {\n\n        return {\n          content: i.key + '  ' + i.title,\n          linkUsers:  (i.linkUsers || []).filter(u => !u.includes(CNNAME)).join(', ') || '---',\n          time: +(allocatedHours[i.key] || 0).toFixed(1) + 'h',\n          priority: i.priority,\n          description: i.description || '----'\n        }\n\n      })\n\n      console.log('\\n\\n详细报告：\\n')\n      console.log(report)\n    }\n  })\n}\n\nconst scanGitRepos = (rootDir, author) => {\n  const repos = findGitRepos(rootDir)\n  \n  if (repos.length === 0) {\n    return console.log('未找到 Git 仓库')\n  }\n\n  console.log(`总共找到 ${repos.length} 个仓库，开始提取最近${TOTALDAYS}天的提交日志`)\n\n  repos.forEach((repo, i) => {\n    if (i < repos.length - 1) {\n      getGitLogs(repo, author)\n    } else {\n      getGitLogs(repo, author, handleLog)\n    }\n    \n  })\n}\n\nscanGitRepos('./', GITAUTHOR) // 扫描./ 目录下的所有git 仓库，并读取 GITAUTHOR = 14 天内\n\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("160")]),n("br"),n("span",{staticClass:"line-number"},[s._v("161")]),n("br"),n("span",{staticClass:"line-number"},[s._v("162")]),n("br"),n("span",{staticClass:"line-number"},[s._v("163")]),n("br"),n("span",{staticClass:"line-number"},[s._v("164")]),n("br"),n("span",{staticClass:"line-number"},[s._v("165")]),n("br"),n("span",{staticClass:"line-number"},[s._v("166")]),n("br"),n("span",{staticClass:"line-number"},[s._v("167")]),n("br"),n("span",{staticClass:"line-number"},[s._v("168")]),n("br"),n("span",{staticClass:"line-number"},[s._v("169")]),n("br"),n("span",{staticClass:"line-number"},[s._v("170")]),n("br"),n("span",{staticClass:"line-number"},[s._v("171")]),n("br"),n("span",{staticClass:"line-number"},[s._v("172")]),n("br"),n("span",{staticClass:"line-number"},[s._v("173")]),n("br"),n("span",{staticClass:"line-number"},[s._v("174")]),n("br"),n("span",{staticClass:"line-number"},[s._v("175")]),n("br"),n("span",{staticClass:"line-number"},[s._v("176")]),n("br"),n("span",{staticClass:"line-number"},[s._v("177")]),n("br"),n("span",{staticClass:"line-number"},[s._v("178")]),n("br"),n("span",{staticClass:"line-number"},[s._v("179")]),n("br"),n("span",{staticClass:"line-number"},[s._v("180")]),n("br"),n("span",{staticClass:"line-number"},[s._v("181")]),n("br"),n("span",{staticClass:"line-number"},[s._v("182")]),n("br"),n("span",{staticClass:"line-number"},[s._v("183")]),n("br"),n("span",{staticClass:"line-number"},[s._v("184")]),n("br"),n("span",{staticClass:"line-number"},[s._v("185")]),n("br"),n("span",{staticClass:"line-number"},[s._v("186")]),n("br"),n("span",{staticClass:"line-number"},[s._v("187")]),n("br"),n("span",{staticClass:"line-number"},[s._v("188")]),n("br"),n("span",{staticClass:"line-number"},[s._v("189")]),n("br"),n("span",{staticClass:"line-number"},[s._v("190")]),n("br"),n("span",{staticClass:"line-number"},[s._v("191")]),n("br"),n("span",{staticClass:"line-number"},[s._v("192")]),n("br"),n("span",{staticClass:"line-number"},[s._v("193")]),n("br"),n("span",{staticClass:"line-number"},[s._v("194")]),n("br"),n("span",{staticClass:"line-number"},[s._v("195")]),n("br"),n("span",{staticClass:"line-number"},[s._v("196")]),n("br"),n("span",{staticClass:"line-number"},[s._v("197")]),n("br"),n("span",{staticClass:"line-number"},[s._v("198")]),n("br"),n("span",{staticClass:"line-number"},[s._v("199")]),n("br"),n("span",{staticClass:"line-number"},[s._v("200")]),n("br"),n("span",{staticClass:"line-number"},[s._v("201")]),n("br"),n("span",{staticClass:"line-number"},[s._v("202")]),n("br"),n("span",{staticClass:"line-number"},[s._v("203")]),n("br"),n("span",{staticClass:"line-number"},[s._v("204")]),n("br"),n("span",{staticClass:"line-number"},[s._v("205")]),n("br"),n("span",{staticClass:"line-number"},[s._v("206")]),n("br"),n("span",{staticClass:"line-number"},[s._v("207")]),n("br"),n("span",{staticClass:"line-number"},[s._v("208")]),n("br"),n("span",{staticClass:"line-number"},[s._v("209")]),n("br"),n("span",{staticClass:"line-number"},[s._v("210")]),n("br"),n("span",{staticClass:"line-number"},[s._v("211")]),n("br"),n("span",{staticClass:"line-number"},[s._v("212")]),n("br"),n("span",{staticClass:"line-number"},[s._v("213")]),n("br"),n("span",{staticClass:"line-number"},[s._v("214")]),n("br"),n("span",{staticClass:"line-number"},[s._v("215")]),n("br"),n("span",{staticClass:"line-number"},[s._v("216")]),n("br"),n("span",{staticClass:"line-number"},[s._v("217")]),n("br"),n("span",{staticClass:"line-number"},[s._v("218")]),n("br"),n("span",{staticClass:"line-number"},[s._v("219")]),n("br"),n("span",{staticClass:"line-number"},[s._v("220")]),n("br"),n("span",{staticClass:"line-number"},[s._v("221")]),n("br"),n("span",{staticClass:"line-number"},[s._v("222")]),n("br"),n("span",{staticClass:"line-number"},[s._v("223")]),n("br"),n("span",{staticClass:"line-number"},[s._v("224")]),n("br"),n("span",{staticClass:"line-number"},[s._v("225")]),n("br"),n("span",{staticClass:"line-number"},[s._v("226")]),n("br"),n("span",{staticClass:"line-number"},[s._v("227")]),n("br"),n("span",{staticClass:"line-number"},[s._v("228")]),n("br")])]),n("hr"),s._v(" "),n("p",[s._v("以上就是本文所有内容了，更多好玩的，欢迎大家在留言区讨论。")]),s._v(" "),n("p",[s._v("本文转自 "),n("a",{attrs:{href:"https://juejin.cn/post/7415925899655577637",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://juejin.cn/post/7415925899655577637"),n("OutboundLink")],1),s._v("，如有侵权，请联系删除。")])])}),[],!1,null,null,null);n.default=t.exports}}]);