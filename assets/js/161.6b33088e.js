(window.webpackJsonp=window.webpackJsonp||[]).push([[161],{621:function(s,a,n){"use strict";n.r(a);var t=n(14),e=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"浅析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浅析"}},[s._v("#")]),s._v(" 浅析")]),s._v(" "),a("p",[s._v("一段ld脚本，将通过链接器链接。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('OUTPUT_ARCH( "riscv" )\n\nENTRY( _start )\n\nMEMORY\n{\n  ram   (wxa!ri) : ORIGIN = 0x80000000, LENGTH = 128M\n}\n\nPHDRS\n{\n  text PT_LOAD;\n  data PT_LOAD;\n  bss PT_LOAD;\n}\n\nSECTIONS\n{\n  .text : {\n    PROVIDE(_text_start = .);\n    *(.text.init) *(.text .text.*)\n    PROVIDE(_text_end = .);\n  } >ram AT>ram :text\n\n  .rodata : {\n    PROVIDE(_rodata_start = .);\n    *(.rodata .rodata.*)\n    PROVIDE(_rodata_end = .);\n  } >ram AT>ram :text\n\n  .data : {\n    . = ALIGN(4096);\n    PROVIDE(_data_start = .);\n    *(.sdata .sdata.*) *(.data .data.*)\n    PROVIDE(_data_end = .);\n  } >ram AT>ram :data\n\n  .bss :{\n    PROVIDE(_bss_start = .);\n    *(.sbss .sbss.*) *(.bss .bss.*)\n    PROVIDE(_bss_end = .);\n  } >ram AT>ram :bss\n\n  PROVIDE(_memory_start = ORIGIN(ram));\n  PROVIDE(_memory_end = ORIGIN(ram) + LENGTH(ram));\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br")])]),a("p",[s._v("编译器和链接器将程序和链接脚本生成elf格式的可执行文件。主要是确定text段，rodata，data，bss段的内存地址布局（虚拟内存）。")]),s._v(" "),a("p",[s._v("编译器和链接器依据系统的"),a("strong",[s._v("虚拟地址空间布局规范")]),s._v("来生成段的虚拟地址（"),a("code",[s._v("p_vaddr")]),s._v("）。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("固定地址布局")]),s._v(" "),a("p",[s._v("：某些平台对可执行文件采用固定的加载地址布局。")]),s._v(" "),a("ul",[a("li",[s._v("通常，代码段 "),a("code",[s._v(".text")]),s._v(" 开始于一个默认基地址（如 Linux 中的 "),a("code",[s._v("0x400000")]),s._v("）。")]),s._v(" "),a("li",[s._v("数据段 "),a("code",[s._v(".data")]),s._v(" 和 "),a("code",[s._v(".bss")]),s._v(" 通常紧随 "),a("code",[s._v(".text")]),s._v(" 段，地址对齐到页面边界（如 4 KB）。")])])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("示例：加载 ELF 文件\n以 Linux 操作系统加载 ELF 文件为例：\n\n读取 ELF 文件头：解析 ELF 文件的 Program Header。\n分配虚拟地址空间：根据 Program Header 的 p_vaddr 信息，建立虚拟内存到物理内存的映射，并设置到cpu的寄存器。\n加载段内容：将 .text（代码段）、.data（初始化数据段）等从磁盘复制到对应的物理内存。\n初始化 BSS：分配未初始化数据的内存，并清零。\n启动程序：设置入口地址，跳转到程序的 _start 函数。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("操作系统加载器根据elf文件中的 "),a("code",[s._v("p_vaddr")]),s._v("、"),a("code",[s._v("p_offset")]),s._v(" 等信息，调用 "),a("code",[s._v("mmap")]),s._v(" 分配虚拟内存并映射段内容（设置到cpu的寄存器）。")]),s._v(" "),a("p",[s._v("之后，根据可执行文件中的入口点（Entry Point）信息，将控制权交给程序的起始代码（通常是程序的 "),a("code",[s._v("_start")]),s._v(" 函数）。")]),s._v(" "),a("p",[s._v("即将cpu的pc赋值为程序的起始代码地址。"),a("em",[s._v("PC")]),s._v("(Program Counter,"),a("em",[s._v("PC")]),s._v(")用来存放当前欲执行指令的地址。")]),s._v(" "),a("p",[s._v("之后，cpu从起始地址开始一行一行开始自行代码，但需要注意的是，cpu读到的内存地址是虚拟内存地址，因为之前os使用了和cpu一样的映射方式，生成了页表（虚拟内存到物理内存的映射关系），所以cpu会找到虚拟内存对应的物理内存执行。")])])}),[],!1,null,null,null);a.default=e.exports}}]);